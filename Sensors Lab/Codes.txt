1. Measuring Temperature:

const int sensor=A0; 
float tempc; 
float tempf; 
float vout; 
void setup() { 
pinMode(sensor,INPUT); 
Serial.begin(9600); 
}
void loop() { 
vout=analogRead(sensor); 
vout=(vout/1024.0)*5.0; 
tempc = (vout - 0.5)*100; 
tempf=(tempc*1.8)+32; 
Serial.print("in DegreeC="); 
Serial.print("\t"); 
Serial.print(tempc); 
Serial.print(" °C "); 
Serial.print("in Fahrenheit=");
Serial.print("\t"); 
Serial.print(tempf); 
Serial.println(" °F "); 
delay(5000); 
}



2. Distance of the Object :

const int trigPin = 3; 
const int echoPin = 2; 
long duration; 
int distance; 
void setup() { 
pinMode(trigPin, OUTPUT); 
pinMode(echoPin, INPUT); 
Serial.begin(9600); 
}
void loop() { 
digitalWrite(trigPin, LOW); 
delayMicroseconds(2); 
digitalWrite(trigPin, HIGH); 
delayMicroseconds(10);
digitalWrite(trigPin, LOW); 
duration = pulseIn(echoPin, HIGH); 
distance = duration * 0.034 / 2; 
Serial.print("Distance: "); 
Serial.println(distance); 
delay(10); 
}


3. Stop Watch in LCD:

#include<LiquidCrystal.h> 
LiquidCrystal lcd(7, 6, 5, 4, 3, 2); 
double i = 0; 
double a = millis(); 
double c ; 
void setup() 
{
lcd.begin(16, 2); 
lcd.clear();
Serial.begin(9600); 
pinMode(8, INPUT); 
digitalWrite(8, HIGH); 
pinMode(9, INPUT); 
digitalWrite(9, HIGH); 
}
void loop(){ 
lcd.clear(); 
lcd.print("press start");
delay(100);
if(digitalRead(8) == LOW) 
{
lcd.clear(); 
a = millis(); 
while(digitalRead(9) == HIGH) 
{
c = millis(); 
i = (c - a) / 1000;
lcd.print(i); 
lcd.setCursor(7,0); 
lcd.print("Sec's"); 
lcd.setCursor(0,0); 
Serial.println(c); 
Serial.println(a); 
Serial.println(i); 
Serial.println(" ..... "); 
delay(100); 
}
if(digitalRead(9) == LOW) 
{
while(digitalRead(8) == HIGH) 
{
lcd.setCursor(0,0); 
lcd.print(i); 
lcd.setCursor(11,0); 
lcd.print(""); 
lcd.setCursor(0,0); 
delay(100); 
}
}
}
}


4. Traffic Lights using LED :

int red = 10; 
int yellow = 9; 
int green = 8; 
void setup() { 
// put your setup code here, to run once: 
pinMode(red, OUTPUT); 
pinMode(yellow, OUTPUT); 
pinMode(green, OUTPUT); 
}
void loop(){ 
// put your main code here, to run repeatedly: 
digitalWrite(green, HIGH); 
digitalWrite(yellow, LOW); 
digitalWrite(red, LOW); 
delay(5000); 
digitalWrite(green, LOW); 
digitalWrite(yellow, HIGH); 
digitalWrite(red, LOW); 
delay(5000); 
digitalWrite(green, LOW); 
digitalWrite(yellow, LOW); 
digitalWrite(red, HIGH); 
delay(5000); 
}



5. Dark Sensing Light :

int value=0;
void setup()
{
 Serial.begin(9600);
 pinMode(11, OUTPUT);
 pinMode(A0, INPUT);
}
void loop()
{
 value=analogRead(A0);
 if (value<150){
 digitalWrite(11,HIGH);
 Serial.println("Light ON");
 Serial.println(value);
 delay(1000);
 }
 else{
 digitalWrite(11,LOW);
 Serial.println("Light OFF");
 Serial.println(value);
 delay(1000);
 }
}



6. LCD Rolling Display :

#include <LiquidCrystal.h>
LiquidCrystal lcd(13,12,7,6,5,4);
int i;
void setup()
{
 lcd.begin(16,2);
}
void loop()
{
 for(i=0 ; i<10 ; i++)
 {
 lcd.setCursor(i,0);
 lcd.print("harsha");
 delay(100);
 lcd.clear();
 }
 for(i=15 ; i>=0 ; i--)
 {
 lcd.setCursor(i,1);
 lcd.print("harsha");
 delay(100);
 lcd.clear();
 }
}


7. Pressure Measurement :

float force_val = 0;
void setup()
{
 pinMode(A0, INPUT);
 pinMode(3, OUTPUT);
 Serial.begin(9600);
}
void loop()
{
 force_val = analogRead(A0);
 if(force_val>=200)
 {
 analogWrite(3,HIGH);
 Serial.println ("Alert !!");
 }else
 {analogWrite(3,LOW);
 }
 Serial.println(force_val);
}



8. Proximity Sensor :

void setup()
{
 pinMode(7,INPUT);
 pinMode(12,OUTPUT);
}
void loop()
{
 int sensvalue=digitalRead(7);
 if(sensvalue>0)
 {
 digitalWrite(12,HIGH);
 delay(100);
 }
 else
 {
 digitalWrite(12,LOW); 
 delay(100);
 }
}



9. Soil Moisure Sensor :

int moisture = 0;
void setup()
{
 pinMode(A0, OUTPUT);
 pinMode(A1, INPUT);
 Serial.begin(9600);
 pinMode(8, OUTPUT);
 pinMode(9, OUTPUT);
 pinMode(10, OUTPUT);
 pinMode(11, OUTPUT);
 pinMode(12, OUTPUT);
}
void loop()
{
 digitalWrite(A0, HIGH);
 delay(10);
 moisture = analogRead(A1);
 digitalWrite(A0, LOW);
 Serial.println(moisture);
 digitalWrite(8, LOW);
 digitalWrite(9, LOW);
 digitalWrite(10, LOW);
 digitalWrite(11, LOW);
 digitalWrite(12, LOW);
 if (moisture < 200) 
 {
 digitalWrite(12, HIGH);
 } 
 else 
 {
 if (moisture < 400) 
 {
 digitalWrite(11, HIGH);
 } 
 else 
 {
 if (moisture < 600) 
 {
 digitalWrite(10, HIGH);
 } 
 else 
 {
 if (moisture < 800) 
 {
 digitalWrite(9, HIGH);
 } 
 else 
 {
 digitalWrite(8, HIGH);
 }
 }
 }
 }
 delay(100);
}



10. Water Level Sensor :

#include <LiquidCrystal.h>
// Input pins
int pin1 = 4;
int pin2 = 5;
int pin3 = 6;
int pin4 = 7;
// Control vars
int num = 0;
int counter = 0;
bool blink = true;
bool done = false;
// Block char
byte blockChar[] = {
 B00000,
 B00000,
 B11111,
 B11111,
 B11111,
 B11111,
 B11111,
 B00000
};
// Water drop icon
byte iconChar[] = {
 B00100,
 B00100,
 B01110,
 B01110,
 B11111,
 B11111,
 B11111,
 B01110
};
// Lightning bolt icon
/* byte iconChar[] = {
 B00111,
 B01110,
 B01100,
 B11111,
 B00110,
 B01100,
 B01000,
 B10000
}; */
// Empty char
byte clearChar[] = {
 B00000,
 B00000,
 B00000,
 B00000,
 B00000,
 B00000,
 B00000,
 B00000
};
LiquidCrystal lcd(13, 12, 11, 10, 9, 8);
void setup()
{ 
 // Set output pins
 lcd.begin(16, 2);
 lcd.createChar(0, blockChar);
 lcd.createChar(1, iconChar);
 lcd.createChar(2, clearChar);
 // Set input pins
 pinMode(pin1, INPUT_PULLUP);
 pinMode(pin2, INPUT_PULLUP);
 pinMode(pin3, INPUT_PULLUP);
 pinMode(pin4, INPUT_PULLUP);
}
void loop()
{
 int max = 0;
 // Read the four "sensors"
 int level25 = digitalRead(pin1);
 int level50 = digitalRead(pin2);
 int level75 = digitalRead(pin3);
 int level100 = digitalRead(pin4);
 // Set the number to display on the BCD display
 if (level25 == HIGH) {
 max = 25;
 if (level50 == HIGH) {
 max = 50;
 if (level75 == HIGH) {
 max = 75;
 if (level100 == HIGH) {
 max = 100;
 }
 }
 }
 }
 int incDec = min(10, abs(num - max));
 if (num < max) num += incDec;
 if (num > max) num -= incDec;
 // Draw only if required
 if (!done) {
 //
 lcd.clear();
 lcd.setCursor(0, 0);
 lcd.print("Level " + String(num) + "%");
 //
 lcd.setCursor(0, 1);
 int percent = (16 * num) / 100;
 for (int i = 0; i < percent; i++) {
 lcd.write(byte(0));
 }
// Set flag
 if (num == max) {
 done = true;
 }
 } else {
 // Reset flag
 if (num != max) {
 done = false;
 }
 }
 // Draw the icon
 lcd.setCursor(15, 0);
 if (blink) {
 lcd.write(byte(1));
 } else {
 lcd.write(byte(2));
 }
 counter++;
 if (counter >= 2) {
 blink = !blink;
 counter = 0;
 }
 // Delay
 delay(250);
}
